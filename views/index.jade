!!! 5
html
  head
    title StateSynth
    
    script(src="/socket.io/socket.io.js")
    
    != css('base')
    
    link(rel="stylesheet", href="/jquery.contextMenu/jquery.contextMenu.css")
    
    script(src="/application.js")
    script
      $(function () {
        require("app").init();
      });
  body
    
    script(type="text/html", id="fun-template")
      .fun(data-bind="event: {mousedown: fun.startDrag}, mousedownBubble: false, positionable: true")
        .params(data-bind="foreach: fun.params()")
          .param(data-bind="event: {mousedown: param.startDrag, mouseup: param.stopDrag}, mousedownBubble: false, positionable: true")
            .value(data-bind="text: param.value")
    
    script(type="text/html", id="state-template")
      .state(data-bind="css: {active: state.active}, positionable: true, event: {mousedown: state.startDrag, mouseup: state.stopDrag}, mousedownBubble: false")
        .directhover
          .background()
          .funs(data-bind="template: {name: 'fun-template', foreach: state.funs}")
        .states(data-bind="template: {name: 'state-template', foreach: state.states}")
    
    
    
    
    #arduino(data-bind="with: arduino")
      #pins(data-bind="foreach: pins")
        div(data-bind="if: supportedModes().length > 0")
          .pin(data-bind="event: {mousedown: startDrag}, mousedownBubble: false")
            div pin: 
              span(data-bind="text: name")
            div mode: 
              select(data-bind="options: supportedModes(), optionsText: 'name', value: mode, event: {mousedown: function (){return true;}}, mousedownBubble: false")
            div value: 
              input(type="text", data-bind="value: value, enable: mode().writeable, event: {mousedown: function (){return true;}}, mousedownBubble: false")
              input(type="range", data-bind="attr: {min: mode().range[0], max: mode().range[1]}, value: value, enable: mode().writeable, event: {mousedown: function (){return true;}}, mousedownBubble: false")
    
    #dataflow
      #states(data-bind="template: {name: 'state-template', foreach: states}")
      div(data-bind="with: tempFun", style="pointer-events: none")
        div(data-bind="template: {name: 'fun-template'}")
      
      
      svg(width="100%", height="100%", version="1.1")
        //- g(data-bind="foreach: states")
        //-   ellipse(fill="white", stroke="grey", stroke-width="2", data-bind="ellipse:true")
        g.connections(data-bind="foreach: connections")
          path.connection(data-bind="css: {active: connection.active}, attr: {d: line.d()}")
        g(data-bind="with: tempLine")
          path(data-bind="attr: {d: line.d()}")
      
      
      